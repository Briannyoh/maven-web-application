node{
     def mavenHome = tool name: 'maven3.9.4'
    stage('1.CloneCode'){
        //Jenkins running on a Linux system
        //sh "git clone https://github.com/Briannyoh/maven-web-application"
        git "https://github.com/Briannyoh/maven-web-application"
        //Jenkins running on a window system
        //bat "git clone https://github.com/Briannyoh/maven-web-application"
    }
    stage('2.mvnBuild'){
        sh "${mavenHome}/bin/mvn clean package"
    }
    stage('3.CodeQuality'){
        //sh "${mavenHome}/bin/mvn sonar:sonar"
        //edit pom.xml propertiesTAG with SonarQube server deatails
    }
    stage('4.UploadArtifacts'){
       // sh "${mavenHome}/bin/mvn deploy"
        //edit pom.xml distributionManagement TAG with repository details
        //edit settings.xml with nexus login-user credentials
    }
    //stage('5.Deploy2UAT'){}
    stage('6.ManualApproval'){
       // sh "echo 'please review the application performance' "
       // timeout(time:600, unit:'HOURS'){
        //input message: 'Application ready for deployment, please review and approve'
        }
    }
    stage('7.Deploy2Prod'){
       // sh "echo 'Deploy application to the customers/production' "
    }
    stage('8.APM'){
       // sh "echo 'monitoring and onbervation and alerting' "
        sh "echo 'application performance monitoring in progress' "
    }
    stage('9.emailNotification'){
        sh "echo 'notify the team for unusual occurances' "
        sh "echo 'notify the team if the applications are down' "
        sh "echo 'notify the team if the latency is higher than expected' "
       emailext body: '''Hi Team,
The build and deployment status for  tesla-app follows.
Regards,
landmark technologies''', recipientProviders: [buildUser(), contributor(), developers(), requestor()], subject: 'build and deployment status', to: 'brian.nyoh@yahoo.com' 
        
    }
}
   
   
